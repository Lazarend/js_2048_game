{"version":3,"sources":["scripts/main.js"],"names":["mainButton","document","querySelector","ROW_NUMBER","COLUNM_NUMBER","BOARD","createBoard","score","gameStatus","setFieldGame","gameField","tableBody","createElement","i","row","j","cell","id","className","appendChild","Array","from","length","fill","renderFieldGame","forEach","rowIndex","value","columnIndex","updateCell","getElementById","innerHTML","classList","add","handleButtonClick","contains","remove","switchMessage","initGame","nameMessage","toggle","resetGame","addValueToField","renderScore","addEventListener","keyDownHandler","hasEmptyCells","randomRow","Math","floor","random","randomColumn","e","initialBoard","cloneBoard","key","moveLeft","moveRight","moveUp","moveDown","currentBoard","JSON","stringify","checkGameStatus","map","slide","reversedRow","slidRow","slice","reverse","col","updateScore","column","push","slidColumn","vectorCurrent","vector","filter","checkWin","showWinMessage","checkAvailableMoves","showLoseMessage","some","includes","flat","keys","currentValue","removeEventListener"],"mappings":"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","file":"main.e04402b6.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst mainButton = document.querySelector('.start');\nconst ROW_NUMBER = 4;\nconst COLUNM_NUMBER = 4;\nconst BOARD = createBoard();\nlet score = 0;\nlet gameStatus = '';\n\nsetFieldGame();\n\nmainButton.addEventListener('click', handleButtonClick);\n\nfunction setFieldGame() {\n  const gameField = document.querySelector('.game-field');\n  const tableBody = document.createElement('tbody');\n\n  for (let i = 0; i < ROW_NUMBER; i++) {\n    const row = document.createElement('tr');\n\n    for (let j = 0; j < COLUNM_NUMBER; j++) {\n      const cell = document.createElement('td');\n\n      cell.id = `${i}-${j}`;\n      cell.className = 'field-cell';\n      row.appendChild(cell);\n    }\n    tableBody.appendChild(row);\n  }\n  gameField.appendChild(tableBody);\n}\n\nfunction createBoard() {\n  return Array.from({ length: ROW_NUMBER }, () => Array(COLUNM_NUMBER).fill(0));\n}\n\nfunction renderFieldGame() {\n  BOARD.forEach((row, rowIndex) => {\n    row.forEach((value, columnIndex) => {\n      const cell = document.getElementById(`${rowIndex}-${columnIndex}`);\n\n      updateCell(cell, value);\n    });\n  });\n}\n\nfunction updateCell(cell, value) {\n  cell.innerHTML = value === 0 ? '' : value;\n  cell.className = 'field-cell';\n\n  if (value !== 0) {\n    cell.classList.add(`field-cell--${value}`);\n  }\n}\n\nfunction handleButtonClick() {\n  if (!mainButton.classList.contains('restart')) {\n    mainButton.classList.remove('start');\n    mainButton.classList.add('restart');\n    mainButton.innerHTML = 'Restart';\n    switchMessage('start');\n  }\n\n  if (gameStatus === 'lose' || gameStatus === 'win') {\n    switchMessage(gameStatus);\n  }\n  gameStatus = '';\n  initGame();\n}\n\nfunction switchMessage(nameMessage) {\n  const message = document.querySelector(`.message-${nameMessage}`);\n\n  message.classList.toggle('hidden');\n}\n\nfunction initGame() {\n  resetGame();\n  addValueToField();\n  addValueToField();\n  renderFieldGame();\n  renderScore();\n  document.addEventListener('keydown', keyDownHandler);\n}\n\nfunction resetGame() {\n  BOARD.forEach(row => row.fill(0));\n  score = 0;\n}\n\nfunction addValueToField() {\n  if (!hasEmptyCells()) {\n    return;\n  }\n\n  while (true) {\n    const randomRow = Math.floor(Math.random() * ROW_NUMBER);\n    const randomColumn = Math.floor(Math.random() * COLUNM_NUMBER);\n\n    if (BOARD[randomRow][randomColumn] === 0) {\n      BOARD[randomRow][randomColumn] = Math.random() < 0.9 ? 2 : 4;\n      break;\n    }\n  }\n}\n\nfunction keyDownHandler(e) {\n  if (gameStatus === 'over') {\n    return;\n  }\n\n  const initialBoard = cloneBoard();\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n    case 'ArrowRight':\n      moveRight();\n      break;\n    case 'ArrowUp':\n      moveUp();\n      break;\n    case 'ArrowDown':\n      moveDown();\n      break;\n    default:\n      return;\n  }\n\n  const currentBoard = cloneBoard();\n\n  if (JSON.stringify(initialBoard) !== JSON.stringify(currentBoard)) {\n    addValueToField();\n    renderFieldGame();\n    renderScore();\n    checkGameStatus();\n  }\n}\n\nfunction cloneBoard() {\n  return BOARD.map(row => [...row]);\n}\n\nfunction moveLeft() {\n  BOARD.forEach((row, rowIndex) => {\n    BOARD[rowIndex] = slide(row);\n  });\n}\n\nfunction moveRight() {\n  BOARD.forEach((row, rowIndex) => {\n    const reversedRow = row.slice().reverse();\n    const slidRow = slide(reversedRow).reverse();\n\n    BOARD[rowIndex] = slidRow;\n\n    for (let col = COLUNM_NUMBER - 1; col > 0; col--) {\n      if (slidRow[col] === slidRow[col - 1] && slidRow[col] !== 0) {\n        slidRow[col] *= 2;\n        slidRow[col - 1] = 0;\n        updateScore(slidRow[col]);\n      }\n    }\n  });\n}\n\nfunction moveUp() {\n  for (let col = 0; col < COLUNM_NUMBER; col++) {\n    const column = [];\n\n    for (let row = 0; row < ROW_NUMBER; row++) {\n      column.push(BOARD[row][col]);\n    }\n\n    const slidColumn = slide(column);\n\n    for (let row = 0; row < ROW_NUMBER - 1; row++) {\n      if (slidColumn[row] === slidColumn[row + 1] && slidColumn[row] !== 0) {\n        slidColumn[row] *= 2;\n        slidColumn[row + 1] = 0;\n        updateScore(slidColumn[row]);\n      }\n    }\n\n    for (let row = 0; row < ROW_NUMBER; row++) {\n      BOARD[row][col] = slidColumn[row];\n    }\n  }\n}\n\nfunction moveDown() {\n  for (let col = 0; col < COLUNM_NUMBER; col++) {\n    const column = [];\n\n    for (let row = ROW_NUMBER - 1; row >= 0; row--) {\n      column.push(BOARD[row][col]);\n    }\n\n    const slidColumn = slide(column);\n\n    for (let row = ROW_NUMBER - 1; row >= 0; row--) {\n      if (slidColumn[row] === slidColumn[row - 1] && slidColumn[row] !== 0) {\n        slidColumn[row] *= 2;\n        slidColumn[row - 1] = 0;\n        updateScore(slidColumn[row]);\n      }\n    }\n\n    for (let row = ROW_NUMBER - 1; row >= 0; row--) {\n      BOARD[row][col] = slidColumn[ROW_NUMBER - 1 - row];\n    }\n  }\n}\n\nfunction slide(vectorCurrent) {\n  let vector = vectorCurrent.filter(value => value !== 0);\n\n  for (let i = 0; i < vector.length - 1; i++) {\n    if (vector[i] === vector[i + 1]) {\n      vector[i] *= 2;\n      vector[i + 1] = 0;\n      updateScore(vector[i]);\n    }\n  }\n\n  vector = vector.filter(value => value !== 0);\n\n  while (vector.length < COLUNM_NUMBER) {\n    vector.push(0);\n  }\n\n  return vector;\n}\n\nfunction checkGameStatus() {\n  if (checkWin()) {\n    showWinMessage();\n    gameStatus = 'win';\n  } else if (!hasEmptyCells() && !checkAvailableMoves()) {\n    showLoseMessage();\n    gameStatus = 'over';\n  }\n}\n\nfunction renderScore() {\n  document.querySelector('.game-score').innerHTML = score;\n}\n\nfunction hasEmptyCells() {\n  return BOARD.some(row => row.includes(0));\n}\n\nfunction checkWin() {\n  return BOARD.flat().includes(2048);\n}\n\nfunction checkAvailableMoves() {\n  return (\n    [...Array(ROW_NUMBER).keys()].some(row => {\n      return [...Array(COLUNM_NUMBER).keys()].some(col => {\n        const currentValue = BOARD[row][col];\n\n        return (\n          (row > 0 && BOARD[row - 1][col] === currentValue)\n          || (row < ROW_NUMBER - 1 && BOARD[row + 1][col] === currentValue)\n          || (col > 0 && BOARD[row][col - 1] === currentValue)\n          || (col < COLUNM_NUMBER - 1 && BOARD[row][col + 1] === currentValue)\n        );\n      });\n    })\n  );\n}\n\nfunction updateScore(value) {\n  score += value;\n  renderScore();\n}\n\nfunction showWinMessage() {\n  document.removeEventListener('keydown', keyDownHandler);\n  switchMessage('win');\n  gameStatus = 'win';\n}\n\nfunction showLoseMessage() {\n  document.removeEventListener('keydown', keyDownHandler);\n  switchMessage('lose');\n  gameStatus = 'lose';\n}\n"]}